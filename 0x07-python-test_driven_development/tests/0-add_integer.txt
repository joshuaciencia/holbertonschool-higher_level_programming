Test cases for add_integer(a, b=98)

>>> fun = __import__('0-add_integer').add_integer
>>> fun(1, 3)
4
>>> fun(0.5, 3.5)
3
>>>
>>> fun("trick", 3)
Traceback (most recent call last):
    ...
TypeError: a must be an integer
>>> fun (3, "trick")
Traceback (most recent call last):
    ...
TypeError: b must be an integer
>>> fun(None, None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer
>>> fun(9223372036854775807, 0)
9223372036854775807
>>> fun()
Traceback (most recent call last):
        ...
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> fun(float('inf'))
Traceback (most recent call last):
	...
OverflowError: cannot convert float infinity to integer
>>> fun(float('nan'))
Traceback (most recent call last):
	...
ValueError: cannot convert float NaN to integer
